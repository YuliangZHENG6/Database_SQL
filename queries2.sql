-- a) Compute the average price per currency of the publications of the most popular title (i.e, the title with most publications overall).

-- TO FIGURE OUT HOW MANY DIFFERENT CURRENCIES ARE THERE?
SELECT DISTINCT CURRENCY
FROM PUBLICATIONS;
-- THE RESULT IS TWO

-- MAIN CODE
SELECT CURRENCY, AVG(PRICE)
FROM PUBLICATIONS
WHERE PUBLICATION_ID IN(
  SELECT PUBLICATION_ID
  FROM PUBLICATION_CONTENT
  WHERE TITLE_ID IN(SELECT TITLE_ID FROM(
      SELECT PC.TITLE_ID, COUNT(PC.PUBLICATION_ID) 
      FROM PUBLICATION_CONTENT PC
      GROUP BY PC.TITLE_ID
      ORDER BY COUNT(PC.PUBLICATION_ID) DESC)
    WHERE ROWNUM = 1))
AND CURRENCY = '$'
GROUP BY CURRENCY
UNION 
SELECT CURRENCY, AVG(PRICE)
FROM PUBLICATIONS
WHERE PUBLICATION_ID IN(
  SELECT PUBLICATION_ID
  FROM PUBLICATION_CONTENT
  WHERE TITLE_ID IN(SELECT TITLE_ID FROM(
      SELECT PC.TITLE_ID, COUNT(PC.PUBLICATION_ID) 
      FROM PUBLICATION_CONTENT PC
      GROUP BY PC.TITLE_ID
      ORDER BY COUNT(PC.PUBLICATION_ID) DESC)
    WHERE ROWNUM = 1))
AND CURRENCY = '£'
GROUP BY CURRENCY;



-- ANALYSIS
SELECT COUNT(PUBC_ID)
FROM PUBLICATION_CONTENT; -- 1853228

SELECT COUNT(DISTINCT TITLE_ID), COUNT(DISTINCT PUBLICATION_ID)
FROM PUBLICATION_CONTENT; -- 1057938, 399088

-- MODIFY THE TABLE: PUBLICATIONS
UPDATE PUBLICATIONS 
SET CURRENCY = '$'
WHERE CURRENCY = '$,';




-- b) Output the names of the top ten title series with most awards.
SELECT TITLE_NAME FROM(
                        SELECT DISTINCT(TS.TITLE_NAME),TA.AWARD_ID
                        FROM TITLE T, TITLE_SERIES TS, TITLE_AWARDS TA
                        WHERE T.SERIES_ID = TS.TITLE_SERIES_ID
                        AND T.TITLE_ID = TA.TITLE_ID
                        GROUP BY TS.TITLE_NAME, TA.AWARD_ID
                        ORDER BY COUNT(DISTINCT TA.AWARD_ID) DESC)
WHERE ROWNUM <= 10;

SELECT * FROM( SELECT STA.TITLE_NAME, COUNT (STA.AWARD_ID) AS AWARD_NUM FROM 
                          ( SELECT TA.AWARD_ID AS AWARD_ID, TS.TITLE_NAME 
                          FROM TITLE T LEFT JOIN TITLE_AWARDS TA ON T.TITLE_ID = TA.TITLE_ID 
                                    LEFT JOIN TITLE_SERIES TS ON TS.TITLE_SERIES_ID = T.SERIES_ID 
                          WHERE TA.AWARD_ID IS NOT NULL AND TS.TITLE_NAME IS NOT NULL AND T.SERIES_ID IS NOT NULL ) STA 
          GROUP BY STA.TITLE_NAME ORDER BY COUNT(STA.AWARD_ID) DESC ) 
WHERE ROWNUM <= 10;





-- c) Output the name of the author who has received the most awards after his/her death.
SELECT AUTHOR_NAME FROM(
                        SELECT AU.AUTHOR_NAME, AW.AWARDS_ID
                        FROM AUTHOR AU, PUBLICATION_AUTHORS PA, PUBLICATION_CONTENT PC, TITLE_AWARDS TA, AWARDS AW
                        WHERE AU.AUTHOR_ID = PA.AUTHOR_ID
                        AND PA.PUBLICATION_ID = PC.PUBLICATION_ID
                        AND PC.TITLE_ID = TA.TITLE_ID
                        AND TA.AWARD_ID = AW.AWARDS_ID
                        AND AU.AUTHOR_DEATHDATE < AW.AWARD_DATE
                        GROUP BY AU.AUTHOR_NAME, AW.AWARDS_ID
                        ORDER BY COUNT(DISTINCT AW.AWARDS_ID) DESC)
WHERE ROWNUM = 1;





-- d) For a given year, output the three publishers that published the most publications.
SELECT PUBLISHER_NAME FROM(
                            SELECT DISTINCT(PR.PUBLISHER_NAME) 
                            FROM PUBLISHER PR, PUBLICATIONS PU
                            WHERE PR.PUBLISHER_ID = PU.PUBLISHER_ID
                            AND EXTRACT(YEAR FROM PU.PUBLICATION_DATE) = 2008
                            GROUP BY PR.PUBLISHER_NAME
                            ORDER BY COUNT(DISTINCT PU.PUBLICATION_ID) DESC)
WHERE ROWNUM <= 3;





-- e) Given an author, compute his/her most reviewed title(s).
SELECT TITLE
FROM TITLE T
WHERE T.TITLE_ID IN(SELECT TITLE_ID FROM(
                                          SELECT DISTINCT R.TITLE_ID
                                          FROM AUTHOR A, PUBLICATION_AUTHORS PU, PUBLICATION_CONTENT PC, REVIEWS R
                                          WHERE A.AUTHOR_ID = PU.AUTHOR_ID
                                          AND PU.PUBLICATION_ID = PC.PUBLICATION_ID
                                          AND PC.TITLE_ID = R.TITLE_ID
                                          AND PC.TITLE_ID = R.TITLE_ID
                                          AND A.AUTHOR_NAME = 'Greg Bear' -- INPUT THE AUTHOR'S NAME HERE FOR QUERY!!! 
                                          GROUP BY R.TITLE_ID
                                          ORDER BY COUNT(DISTINCT REVIEW_ID) DESC)
                                      WHERE ROWNUM = 1);





-- f) For every language, find the top three title types with most translations.
SELECT DISTINCT LANGUAGE_NAME FROM(
                  SELECT T.TYPE_ , L.LANGUAGE_NAME
                  FROM TITLE T, LANGUAGES L
                  WHERE T.TITLE_TRANSLATOR IS NOT NULL
                  AND T.LANGUAGE_ = L.LANGUAGE_ID
                  GROUP BY T.TYPE_, L.LANGUAGE_NAME);
-- The result shows that only 4 languages satisfy the requirement: English, Russian, French, Polish

-- Based on the result offers above, we use union to get the overall consequence
SELECT LANGUAGE_NAME, TYPE_ FROM(
                  SELECT T.TYPE_, L.LANGUAGE_NAME
                  FROM TITLE T, LANGUAGES L
                  WHERE T.TITLE_TRANSLATOR IS NOT NULL
                  AND T.LANGUAGE_ = L.LANGUAGE_ID
                  AND L.LANGUAGE_NAME = 'English'
                  GROUP BY T.TYPE_, L.LANGUAGE_NAME
                  ORDER BY COUNT(T.TITLE_TRANSLATOR) DESC)
                  WHERE ROWNUM <=3
UNION
SELECT LANGUAGE_NAME, TYPE_ FROM(
                  SELECT T.TYPE_, L.LANGUAGE_NAME
                  FROM TITLE T, LANGUAGES L
                  WHERE T.TITLE_TRANSLATOR IS NOT NULL
                  AND T.LANGUAGE_ = L.LANGUAGE_ID
                  AND L.LANGUAGE_NAME = 'Russian'
                  GROUP BY T.TYPE_, L.LANGUAGE_NAME
                  ORDER BY COUNT(T.TITLE_TRANSLATOR) DESC)
                  WHERE ROWNUM <=3
UNION
SELECT LANGUAGE_NAME, TYPE_ FROM(
                  SELECT T.TYPE_, L.LANGUAGE_NAME
                  FROM TITLE T, LANGUAGES L
                  WHERE T.TITLE_TRANSLATOR IS NOT NULL
                  AND T.LANGUAGE_ = L.LANGUAGE_ID
                  AND L.LANGUAGE_NAME = 'French'
                  GROUP BY T.TYPE_, L.LANGUAGE_NAME
                  ORDER BY COUNT(T.TITLE_TRANSLATOR) DESC)
                  WHERE ROWNUM <=3
UNION
SELECT LANGUAGE_NAME, TYPE_ FROM(
                  SELECT T.TYPE_, L.LANGUAGE_NAME
                  FROM TITLE T, LANGUAGES L
                  WHERE T.TITLE_TRANSLATOR IS NOT NULL
                  AND T.LANGUAGE_ = L.LANGUAGE_ID
                  AND L.LANGUAGE_NAME = 'Polish'
                  GROUP BY T.TYPE_, L.LANGUAGE_NAME
                  ORDER BY COUNT(T.TITLE_TRANSLATOR) DESC)
                  WHERE ROWNUM <=3;

-- A QUICKER WAY TO GET THE REULTS
WITH SUBQUERY AS(
  SELECT T.TYPE_ AS TITLE_TYPE, L.LANGUAGE_NAME, COUNT(T.TITLE_TRANSLATOR) AS NUM
  FROM TITLE T, LANGUAGES L
  WHERE T.TITLE_TRANSLATOR IS NOT NULL
  AND T.LANGUAGE_ = L.LANGUAGE_ID
  GROUP BY T.TYPE_, L.LANGUAGE_NAME)
SELECT * 
FROM ( SELECT T1.LANGUAGE_NAME, T1.TITLE_TYPE, ROW_NUMBER() OVER
          ( PARTITION BY T1.LANGUAGE_NAME
            ORDER BY T1.NUM DESC) AS RANKS
            FROM SUBQUERY T1)T2
WHERE T2.RANKS <=3;





-- g) For each year, compute the average number of authors per publisher.
SELECT EXTRACT(YEAR FROM PU.PUBLICATION_DATE) AS EACH_YEAR, PR.PUBLISHER_NAME,  PR.PUBLISHER_ID, COUNT(PA.AUTHOR_ID) AS NUM_AUTHORS
    FROM PUBLICATIONS PU, PUBLISHER PR, PUBLICATION_AUTHORS PA
    WHERE PU.PUBLISHER_ID = PR.PUBLISHER_ID
    AND PU.PUBLICATION_ID = PA.PUBLICATION_ID
    AND EXTRACT(YEAR FROM PU.PUBLICATION_DATE) <> '8888' and EXTRACT(YEAR FROM PU.PUBLICATION_DATE) <> '1001'
    GROUP BY EXTRACT(YEAR FROM PU.PUBLICATION_DATE), PR.PUBLISHER_NAME, PR.PUBLISHER_ID
    ORDER BY EXTRACT(YEAR FROM PU.PUBLICATION_DATE) DESC;





-- h) Find the publication series with most titles that have been given awards of “World Fantasy Award” type.

--SELECT * FROM AWARD_TYPE
--WHERE AWARD_TYPE_NAME = 'World Fantasy Award';

SELECT PUBLICATION_SERIES_ID, PUBLICATION_SERIES_NAME FROM
  (SELECT PS.PUBLICATION_SERIES_ID, PS.PUBLICATION_SERIES_NAME, COUNT(PC.TITLE_ID) AS NUM_TITLE
   FROM PUBLICATION_SERIES PS, PUBLICATIONS PU, PUBLICATION_CONTENT PC, TITLE_AWARDS TA, AWARDS AW, AWARD_TYPE ATY
   WHERE PS.PUBLICATION_SERIES_ID = PU.PUBLICATION_SERIES_ID
   AND PU.PUBLICATION_ID = PC.PUBLICATION_ID
   AND PC.TITLE_ID = TA.TITLE_ID
   AND TA.AWARD_ID = AW.AWARDS_ID
   AND AW.AWARD_TYPE_ID = ATY.AWARD_TYPE_ID
   AND ATY.AWARD_TYPE_NAME = 'World Fantasy Award'
   GROUP BY PS.PUBLICATION_SERIES_ID, PS.PUBLICATION_SERIES_NAME
   ORDER BY COUNT(PC.TITLE_ID) DESC)
WHERE ROWNUM = 1;





-- i) For every award category, list the names of the three most awarded authors.
WITH SUBQUERY AS(
SELECT AWARD_CATEGORY_ID, AWARD_CATEGORY_NAME, AUTHOR_NAME, COUNT(AWARDS_ID) AS NUM
FROM(SELECT PA.AUTHOR_ID, AU.AUTHOR_NAME, AC.AWARD_CATEGORY_ID, AC.AWARD_CATEGORY_NAME, AW.AWARDS_ID
      FROM AWARD_CATEGORY AC, AWARDS AW, TITLE_AWARDS TA, PUBLICATION_CONTENT PC, PUBLICATION_AUTHORS PA, AUTHOR AU
      WHERE AC.AWARD_CATEGORY_ID = AW.AWARD_CATEGORY_ID
      AND AW.AWARDS_ID = TA.AWARD_ID
      AND TA.TITLE_ID = PC.TITLE_ID
      AND PC.PUBLICATION_ID = PA.PUBLICATION_ID
      AND PA.AUTHOR_ID = AU.AUTHOR_ID
      GROUP BY PA.AUTHOR_ID, AU.AUTHOR_NAME, AC.AWARD_CATEGORY_ID, AC.AWARD_CATEGORY_NAME, AW.AWARDS_ID)
GROUP BY AWARD_CATEGORY_ID, AWARD_CATEGORY_NAME, AUTHOR_NAME
ORDER BY AWARD_CATEGORY_ID)
SELECT *
FROM( SELECT T1.AWARD_CATEGORY_ID, T1.AWARD_CATEGORY_NAME, T1.AUTHOR_NAME, ROW_NUMBER() OVER
        (PARTITION BY T1.AWARD_CATEGORY_NAME
         ORDER BY T1.NUM DESC) AS RANKS
      FROM SUBQUERY T1)T2
WHERE T2.RANKS <= 3;





-- j) Output the names of all living authors that have published at least one anthology from youngest to oldest.
SELECT AU.AUTHOR_NAME, AU.AUTHOR_BIRTHDATE
FROM AUTHOR AU, PUBLICATION_AUTHORS PA, PUBLICATION_CONTENT PC, TITLE T
WHERE AU.AUTHOR_ID = PA.AUTHOR_ID
AND PA.PUBLICATION_ID = PC.PUBLICATION_ID
AND PC.TITLE_ID = T.TITLE_ID
AND T.TYPE_ = 'ANTHOLOGY'
AND AU.AUTHOR_DEATHDATE IS NULL
GROUP BY AU.AUTHOR_NAME, AU.AUTHOR_BIRTHDATE
ORDER BY AU.AUTHOR_BIRTHDATE;





-- k) Compute the average number of publications per publication series (single result/number expected).
SELECT AVG(NUM_SERIES) FROM(
  SELECT PU.PUBLICATION_SERIES_ID, COUNT(PU.PUBLICATION_ID) AS NUM_SERIES
  FROM PUBLICATIONS PU, PUBLICATION_SERIES PS
  WHERE PU.PUBLICATION_SERIES_ID = PS.PUBLICATION_SERIES_ID
  GROUP BY PU.PUBLICATION_SERIES_ID);





-- l) Find the author who has reviewed the most titles.
SELECT AUTHOR_ID, AUTHOR_NAME, NUM_OF_REVIEW FROM(
  SELECT AU.AUTHOR_ID, AU.AUTHOR_NAME, COUNT(T.TITLE_ID) AS NUM_OF_REVIEW
  FROM AUTHOR AU, PUBLICATION_AUTHORS PU, PUBLICATION_CONTENT PC, TITLE T
  WHERE AU.AUTHOR_ID = PU.AUTHOR_ID
  AND PU.PUBLICATION_ID = PC.PUBLICATION_ID
  AND PC.TITLE_ID = T.TITLE_ID
  AND T.TYPE_ = 'REVIEW'
  GROUP BY AU.AUTHOR_ID, AU.AUTHOR_NAME
  ORDER BY COUNT(T.TITLE_ID) DESC)
WHERE ROWNUM = 1;





-- m) For every language, list the three authors with the most translated titles of “novel” type.

WITH SUBQUERY AS(
SELECT L.LANGUAGE_NAME, AU.AUTHOR_NAME, COUNT(T.TITLE_ID) AS NUM
FROM LANGUAGES L, TITLE T, PUBLICATION_CONTENT PC, PUBLICATION_AUTHORS PA, AUTHOR AU
WHERE L.LANGUAGE_ID = T.LANGUAGE_
AND T.TITLE_ID = PC.TITLE_ID
AND PC.PUBLICATION_ID = PA.PUBLICATION_ID
AND PA.AUTHOR_ID = AU.AUTHOR_ID
AND T.TYPE_ = 'NOVEL'
AND T.TITLE_TRANSLATOR IS NOT NULL
GROUP BY L.LANGUAGE_NAME, AU.AUTHOR_NAME)
SELECT *
FROM ( SELECT T1.LANGUAGE_NAME, T1.AUTHOR_NAME, ROW_NUMBER() OVER
        ( PARTITION BY T1.LANGUAGE_NAME
          ORDER BY T1.NUM DESC) AS RANKS
       FROM SUBQUERY T1) T2
WHERE T2.RANKS <= 3;





-- n) Order the top ten authors whose publications have the largest pages per dollar ratio 
--    (considering all publications of an author that have a dollar price).

SELECT AUTHOR_ID, AUTHOR_NAME FROM(
  SELECT AU.AUTHOR_ID, AU.AUTHOR_NAME, (P.PRICE/P.NEWPAGES)
  FROM PUBLICATION_AUTHORS PA, AUTHOR AU, PUBLICATIONS P
  WHERE PA.AUTHOR_ID = AU.AUTHOR_ID
  AND PA.PUBLICATION_ID = P.PUBLICATION_ID
  AND P.CURRENCY = '$'
  AND P.NEWPAGES IS NOT NULL
  --GROUP BY AU.AUTHOR_ID, AU.AUTHOR_NAME
  ORDER BY (P.PRICE/P.NEWPAGES) DESC)
WHERE ROWNUM <= 10;





-- O) For publications that have been awarded the Nebula award, find the top 10 with the most extensive web presence 
--    (i.e, the highest number of author websites, publication websites, publisher websites, publication series websites, 
--    and title series websites in total)

-- THE PUBLICATIONS AWARDED THE NEBULA AWARD
SELECT P.PUBLICATION_ID, PA.AUTHOR_ID, P.PUBLISHER_ID, P.PUBLICATION_SERIES_ID, TA.TITLE_ID, AT.AWARD_TYPE_ID
FROM AWARD_TYPE AT, AWARDS AW, TITLE_AWARDS TA, PUBLICATION_CONTENT PC, PUBLICATIONS P, PUBLICATION_AUTHORS PA
WHERE AT.AWARD_TYPE_ID = AW.AWARD_TYPE_ID
AND AW.AWARDS_ID = TA.AWARD_ID
AND TA.TITLE_ID = PC.TITLE_ID
AND PC.PUBLICATION_ID = P.PUBLICATION_ID
AND P.PUBLICATION_ID = PA.PUBLICATION_ID
AND AT.AWARD_TYPE_NAME = 'Nebula Award';

-- MAIN CODE
WITH SUBQUERY AS(
SELECT P.PUBLICATION_ID, P.PUBLICATION_TITLE, PA.AUTHOR_ID, P.PUBLISHER_ID, P.PUBLICATION_SERIES_ID, TA.TITLE_ID, AT.AWARD_TYPE_ID
FROM AWARD_TYPE AT, AWARDS AW, TITLE_AWARDS TA, PUBLICATION_CONTENT PC, PUBLICATIONS P, PUBLICATION_AUTHORS PA
WHERE AT.AWARD_TYPE_ID = AW.AWARD_TYPE_ID
AND AW.AWARDS_ID = TA.AWARD_ID
AND TA.TITLE_ID = PC.TITLE_ID
AND PC.PUBLICATION_ID = P.PUBLICATION_ID
AND P.PUBLICATION_ID = PA.PUBLICATION_ID
AND AT.AWARD_TYPE_NAME = 'Nebula Award')
SELECT PUBLICATION_ID, PUBLICATION_TITLE, NUM_WEBSITES FROM(
SELECT PUBLICATION_ID, PUBLICATION_TITLE, COUNT(WEBPAGE_ID) AS NUM_WEBSITES FROM(
SELECT S.PUBLICATION_ID, S.PUBLICATION_TITLE, WE.WEBPAGE_ID
FROM SUBQUERY S, WEBPAGE WE
WHERE S.AUTHOR_ID = WE.AUTHOR_ID
UNION 
SELECT S.PUBLICATION_ID, S.PUBLICATION_TITLE, WE.WEBPAGE_ID
FROM SUBQUERY S, WEBPAGE WE
WHERE S.PUBLISHER_ID = WE.PUBLISHER_ID 
UNION 
SELECT S.PUBLICATION_ID, S.PUBLICATION_TITLE, WE.WEBPAGE_ID
FROM SUBQUERY S, WEBPAGE WE
WHERE S.PUBLICATION_SERIES_ID = WE.PUBLICATION_SERIES_ID
UNION
SELECT S.PUBLICATION_ID, S.PUBLICATION_TITLE, WE.WEBPAGE_ID
FROM SUBQUERY S, WEBPAGE WE
WHERE S.TITLE_ID = WE.TITLE_ID
UNION
SELECT S.PUBLICATION_ID, S.PUBLICATION_TITLE, WE.WEBPAGE_ID
FROM SUBQUERY S, WEBPAGE WE
WHERE S.AWARD_TYPE_ID = WE.AWARD_TYPE_ID)
GROUP BY PUBLICATION_ID, PUBLICATION_TITLE
ORDER BY COUNT(WEBPAGE_ID) DESC)
WHERE ROWNUM <= 10;

--SELECT PUBLICATION_TITLE
--FROM PUBLICATIONS
--WHERE PUBLICATION_ID = 35889;
